# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] 

 
# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 1]]  # 0-P1/2
  - [-1, 1, Conv, [128, 3, 1]]  # 1-P2/4
  - [-1, 1, space_to_depth, [1]]  # 2 -P2/4
  - [-1, 3, C2f, [128, True]]
  - [-1, 1, Conv, [256, 3, 1]]  # 4-P3/8
  - [-1, 1, space_to_depth, [1]]
  - [-1, 6, C2f, [256, True]]
  - [-1, 1, SCDown, [512, 3, 1]]  # 7-P4/16
  - [-1, 1, space_to_depth, [1]]
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, SCDown, [1024, 3, 1]]  # 10-P5/32
  - [-1, 1, space_to_depth, [1]]
  - [-1, 3, C2f, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]]  # 13
  - [-1, 1, PSA, [1024]] # 14
 
# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 8], 1, Concat, [1]]  # cat backbone P4
  - [-1, 3, C2f, [512]]  # 17
 
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 5], 1, Concat, [1]]  # cat backbone P3
  - [-1, 3, C2f, [256]]  # 20 (P3/8-small)
 
  - [-1, 1, Conv, [256, 3, 1]]
  - [-1, 1, space_to_depth, [1]]
  - [[-1, 17], 1, Concat, [1]]  # cat head P4
  - [-1, 3, C2f, [512]]  # 24 (P4/16-medium)
 
  - [-1, 1, SCDown, [512, 3, 1]]
  - [-1, 1, space_to_depth, [1]]
  - [[-1, 14], 1, Concat, [1]]  # cat head P5
  - [-1, 3, C2fCIB, [1024]]  # 28 (P5/32-large)
 
  - [[20, 24, 28], 1, v10Detect, [nc]] # Detect(P3, P4, P5)
